class Solution {
    public int[] kWeakestRows(int[][] mat, int k) 
    {
        int i=0;
        int j=0;
        int count=0;
        int temp=0;
        int temp1=0;
        int[] arr = new int[mat.length];
        int[] arr2 = new int[mat.length];
        int[] arr3 = new int[k];

        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        for (i=0 ; i<mat.length ; i++)
        {   
            
            while (j < mat[0].length && mat [i][j] != 0)
            {
                count ++;
                j++;
            }
            arr[i]=count;  
            arr2[i]= i;

           
           
            count = 0;
            j=0;
        }
        for (i=0 ;i<arr.length;i++)
        {
            for (j=0; j<arr.length; j++)
            {
                if (arr[i] < arr[j] || (arr[j] == arr[i] && arr2[i] < arr2[j]))
                {
                    temp = arr[i];
                    temp1 = arr2[i];

                    arr[i] = arr[j];
                    arr2[i] = arr2[j];

                    arr[j] = temp;
                    arr2[j] = temp1;
                }
            }
        }
        
        for (i=0 ; i<k ; i++)
        {
            arr3[i] = arr2[i];
        }
        
        
    
        return arr3;
    }
}
