import java.nio.charset.StandardCharsets;
class Solution {
    public String longestPalindrome(String s) 
    {
        int n = s.length();
        int maxLength = 0;
        int start = 0;
        int end = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i+1; j < n; j++) {
                int left = i;
                int right = j;
                while (left < right) {
                    if (s.charAt(left) == s.charAt(right)) {
                        left++;
                        right--;
                    } else {
                        break;
                    }
                }
                if (j - i + 1 > maxLength && left >= right) {
                    maxLength = j - i + 1;
                    start = i;
                    end = j;
                }
            }
        }
        return s.substring(start, end + 1);
    }
        
}
